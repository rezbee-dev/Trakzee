############################################################
# Setup react
############################################################
FROM node:19 as build-react

# set working directory
WORKDIR /usr/app/client

# add `/usr/src/app/node_modules/.bin` to $PATH
# see: https://stackoverflow.com/a/65407744
ENV PATH /usr/src/app/node_modules/.bin:$PATH
ENV NODE_ENV production

# install and cache app dependencies
COPY ./client/package.json .
COPY ./client/package-lock.json .
RUN npm ci

# add app
COPY ./client .

RUN npm run build

############################################################
# Setup flask
############################################################
FROM python:3.11.2-slim-buster as build-flask

# set working directory
WORKDIR /usr/app/api

# install dependencies
COPY --from=builder /usr/app/wheels /wheels
COPY --from=builder /usr/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# add app
COPY ./api .

############################################################
# Final
############################################################
FROM nginx:stable-alpine

# set working directory
WORKDIR /usr/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV FLASK_DEBUG 0
ENV FLASK_ENV production
ENV APP_SETTINGS server.config.ProductionConfig
ARG SECRET_KEY
ENV SECRET_KEY=$SECRET_KEY

COPY --from=build-react /usr/app/client/dist /usr/share/nginx/html
COPY --from=build-flask /usr/app/api .
COPY ./http/default.conf /etc/nginx/conf.d/default.conf

# --daemon -> run in background
# `sed -i ...` -> replace $PORT in default.conf with env var PORT (set by heroku)
CMD cd src && gunicorn -b 0.0.0.0:5000 main:app --daemon && \
      sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && \
      nginx -g 'daemon off;
