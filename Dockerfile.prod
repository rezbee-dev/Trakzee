# BUILD

# pull official base image
FROM python:3.11.2-slim-buster as builder

# set working directory
WORKDIR /usr/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# add and install requirements
RUN pip install --upgrade pip
COPY ./api/requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/app/wheels -r requirements.txt

# add app
COPY ./api .

# lint
# if any fails, then build stops
RUN pip install black==23.1.0 flake8==6.0.0 isort==5.12.0
RUN flake8 src
RUN black src --line-length 119 --check
RUN isort src --check-only

############################################################
# FINAL
FROM python:3.11.2-slim-buster

# set working directory
WORKDIR /usr/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV FLASK_DEBUG 0
ENV FLASK_ENV production
ENV APP_SETTINGS server.config.ProductionConfig
ARG SECRET_KEY
ENV SECRET_KEY=$SECRET_KEY

# install dependencies
COPY --from=builder /usr/app/wheels /wheels
COPY --from=builder /usr/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# add app
COPY . .

# add and run as non-root user
RUN adduser --disabled-password myuser
USER myuser

# run gunicorn
# see: https://flask.palletsprojects.com/en/2.3.x/deploying/gunicorn/#running
# $PORT is supplied by Heroku
CMD cd src && gunicorn --bind 0.0.0.0:$PORT main:app