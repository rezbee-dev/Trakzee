services:

  api-client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/usr/app/client
      # Anonymous volume to prevent overwriting container node_modules when mounted
      - /usr/app/client/node_modules
    ports:
      - 5003:5003
    environment:
      - NODE_ENV=development
    depends_on:
      - api

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/usr/app/api
    ports:
      - 5004:5004
    environment:
      - FLASK_DEBUG=1
      - FLASK_ENV=development
      - APP_SETTINGS=server.config.DevelopmentConfig
      - DATABASE_URL=postgresql://postgres:postgres@api-db:5432/api_dev
      - DATABASE_TEST_URL=postgresql://postgres:postgres@api-db:5432/api_test
    depends_on:
      api-db:
        condition: service_healthy

  api-db:
    build:
      context: ./db
      dockerfile: Dockerfile
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    # see: https://github.com/peter-evans/docker-compose-healthcheck/tree/master
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-http:
    build:
      context: ./http
      dockerfile: Dockerfile
    